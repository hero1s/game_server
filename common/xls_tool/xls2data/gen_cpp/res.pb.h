// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: res.proto

#ifndef PROTOBUF_res_2eproto__INCLUDED
#define PROTOBUF_res_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace conf {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_res_2eproto();
void protobuf_AssignDesc_res_2eproto();
void protobuf_ShutdownFile_res_2eproto();

class ResDes;
class Role;
class Roles;
class Award;
class PlayerLevel;
class PlayerLevels;
class CopyInfo;
class CopyInfos;
class RoleLevel;
class RoleLevels;
class PlayerBirth;
class PlayerBirths;

// ===================================================================

class ResDes : public ::google::protobuf::Message {
 public:
  ResDes();
  virtual ~ResDes();

  ResDes(const ResDes& from);

  inline ResDes& operator=(const ResDes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResDes& default_instance();

  void Swap(ResDes* other);

  // implements Message ----------------------------------------------

  ResDes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResDes& from);
  void MergeFrom(const ResDes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 resID = 1;
  inline bool has_resid() const;
  inline void clear_resid();
  static const int kResIDFieldNumber = 1;
  inline ::google::protobuf::int32 resid() const;
  inline void set_resid(::google::protobuf::int32 value);

  // required sint32 resNum = 2;
  inline bool has_resnum() const;
  inline void clear_resnum();
  static const int kResNumFieldNumber = 2;
  inline ::google::protobuf::int32 resnum() const;
  inline void set_resnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:conf.ResDes)
 private:
  inline void set_has_resid();
  inline void clear_has_resid();
  inline void set_has_resnum();
  inline void clear_has_resnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 resid_;
  ::google::protobuf::int32 resnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_res_2eproto();
  friend void protobuf_AssignDesc_res_2eproto();
  friend void protobuf_ShutdownFile_res_2eproto();

  void InitAsDefaultInstance();
  static ResDes* default_instance_;
};
// -------------------------------------------------------------------

class Role : public ::google::protobuf::Message {
 public:
  Role();
  virtual ~Role();

  Role(const Role& from);

  inline Role& operator=(const Role& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Role& default_instance();

  void Swap(Role* other);

  // implements Message ----------------------------------------------

  Role* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Role& from);
  void MergeFrom(const Role& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required sint32 icon = 3;
  inline bool has_icon() const;
  inline void clear_icon();
  static const int kIconFieldNumber = 3;
  inline ::google::protobuf::int32 icon() const;
  inline void set_icon(::google::protobuf::int32 value);

  // required sint32 starLv = 4;
  inline bool has_starlv() const;
  inline void clear_starlv();
  static const int kStarLvFieldNumber = 4;
  inline ::google::protobuf::int32 starlv() const;
  inline void set_starlv(::google::protobuf::int32 value);

  // required sint32 job = 5;
  inline bool has_job() const;
  inline void clear_job();
  static const int kJobFieldNumber = 5;
  inline ::google::protobuf::int32 job() const;
  inline void set_job(::google::protobuf::int32 value);

  // required sint32 level = 6;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 6;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // required sint32 attack = 7;
  inline bool has_attack() const;
  inline void clear_attack();
  static const int kAttackFieldNumber = 7;
  inline ::google::protobuf::int32 attack() const;
  inline void set_attack(::google::protobuf::int32 value);

  // required sint32 defense = 8;
  inline bool has_defense() const;
  inline void clear_defense();
  static const int kDefenseFieldNumber = 8;
  inline ::google::protobuf::int32 defense() const;
  inline void set_defense(::google::protobuf::int32 value);

  // required sint32 hp = 9;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 9;
  inline ::google::protobuf::int32 hp() const;
  inline void set_hp(::google::protobuf::int32 value);

  // required sint32 silverPlus = 10;
  inline bool has_silverplus() const;
  inline void clear_silverplus();
  static const int kSilverPlusFieldNumber = 10;
  inline ::google::protobuf::int32 silverplus() const;
  inline void set_silverplus(::google::protobuf::int32 value);

  // required sint32 unlock = 11;
  inline bool has_unlock() const;
  inline void clear_unlock();
  static const int kUnlockFieldNumber = 11;
  inline ::google::protobuf::int32 unlock() const;
  inline void set_unlock(::google::protobuf::int32 value);

  // required sint32 buyMaterial = 12;
  inline bool has_buymaterial() const;
  inline void clear_buymaterial();
  static const int kBuyMaterialFieldNumber = 12;
  inline ::google::protobuf::int32 buymaterial() const;
  inline void set_buymaterial(::google::protobuf::int32 value);

  // required sint32 upgradeMaterial = 13;
  inline bool has_upgradematerial() const;
  inline void clear_upgradematerial();
  static const int kUpgradeMaterialFieldNumber = 13;
  inline ::google::protobuf::int32 upgradematerial() const;
  inline void set_upgradematerial(::google::protobuf::int32 value);

  // required sint32 bulletEffect = 14;
  inline bool has_bulleteffect() const;
  inline void clear_bulleteffect();
  static const int kBulletEffectFieldNumber = 14;
  inline ::google::protobuf::int32 bulleteffect() const;
  inline void set_bulleteffect(::google::protobuf::int32 value);

  // required sint32 skill = 15;
  inline bool has_skill() const;
  inline void clear_skill();
  static const int kSkillFieldNumber = 15;
  inline ::google::protobuf::int32 skill() const;
  inline void set_skill(::google::protobuf::int32 value);

  // required sint32 model = 16;
  inline bool has_model() const;
  inline void clear_model();
  static const int kModelFieldNumber = 16;
  inline ::google::protobuf::int32 model() const;
  inline void set_model(::google::protobuf::int32 value);

  // required sint32 hpFactor = 17;
  inline bool has_hpfactor() const;
  inline void clear_hpfactor();
  static const int kHpFactorFieldNumber = 17;
  inline ::google::protobuf::int32 hpfactor() const;
  inline void set_hpfactor(::google::protobuf::int32 value);

  // required sint32 atFactor = 18;
  inline bool has_atfactor() const;
  inline void clear_atfactor();
  static const int kAtFactorFieldNumber = 18;
  inline ::google::protobuf::int32 atfactor() const;
  inline void set_atfactor(::google::protobuf::int32 value);

  // required sint32 deFactor = 19;
  inline bool has_defactor() const;
  inline void clear_defactor();
  static const int kDeFactorFieldNumber = 19;
  inline ::google::protobuf::int32 defactor() const;
  inline void set_defactor(::google::protobuf::int32 value);

  // required sint32 hpGrow = 20;
  inline bool has_hpgrow() const;
  inline void clear_hpgrow();
  static const int kHpGrowFieldNumber = 20;
  inline ::google::protobuf::int32 hpgrow() const;
  inline void set_hpgrow(::google::protobuf::int32 value);

  // required sint32 atGrow = 21;
  inline bool has_atgrow() const;
  inline void clear_atgrow();
  static const int kAtGrowFieldNumber = 21;
  inline ::google::protobuf::int32 atgrow() const;
  inline void set_atgrow(::google::protobuf::int32 value);

  // required sint32 deGrow = 22;
  inline bool has_degrow() const;
  inline void clear_degrow();
  static const int kDeGrowFieldNumber = 22;
  inline ::google::protobuf::int32 degrow() const;
  inline void set_degrow(::google::protobuf::int32 value);

  // required sint32 star1ItemID = 23;
  inline bool has_star1itemid() const;
  inline void clear_star1itemid();
  static const int kStar1ItemIDFieldNumber = 23;
  inline ::google::protobuf::int32 star1itemid() const;
  inline void set_star1itemid(::google::protobuf::int32 value);

  // required sint32 star1ItemNum = 24;
  inline bool has_star1itemnum() const;
  inline void clear_star1itemnum();
  static const int kStar1ItemNumFieldNumber = 24;
  inline ::google::protobuf::int32 star1itemnum() const;
  inline void set_star1itemnum(::google::protobuf::int32 value);

  // required sint32 star2ItemID = 25;
  inline bool has_star2itemid() const;
  inline void clear_star2itemid();
  static const int kStar2ItemIDFieldNumber = 25;
  inline ::google::protobuf::int32 star2itemid() const;
  inline void set_star2itemid(::google::protobuf::int32 value);

  // required sint32 star2ItemNum = 26;
  inline bool has_star2itemnum() const;
  inline void clear_star2itemnum();
  static const int kStar2ItemNumFieldNumber = 26;
  inline ::google::protobuf::int32 star2itemnum() const;
  inline void set_star2itemnum(::google::protobuf::int32 value);

  // required sint32 star3ItemID = 27;
  inline bool has_star3itemid() const;
  inline void clear_star3itemid();
  static const int kStar3ItemIDFieldNumber = 27;
  inline ::google::protobuf::int32 star3itemid() const;
  inline void set_star3itemid(::google::protobuf::int32 value);

  // required sint32 star3ItemNum = 28;
  inline bool has_star3itemnum() const;
  inline void clear_star3itemnum();
  static const int kStar3ItemNumFieldNumber = 28;
  inline ::google::protobuf::int32 star3itemnum() const;
  inline void set_star3itemnum(::google::protobuf::int32 value);

  // required sint32 moveSpeed = 29;
  inline bool has_movespeed() const;
  inline void clear_movespeed();
  static const int kMoveSpeedFieldNumber = 29;
  inline ::google::protobuf::int32 movespeed() const;
  inline void set_movespeed(::google::protobuf::int32 value);

  // required sint32 moveRange = 30;
  inline bool has_moverange() const;
  inline void clear_moverange();
  static const int kMoveRangeFieldNumber = 30;
  inline ::google::protobuf::int32 moverange() const;
  inline void set_moverange(::google::protobuf::int32 value);

  // required sint32 type = 31;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 31;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:conf.Role)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_icon();
  inline void clear_has_icon();
  inline void set_has_starlv();
  inline void clear_has_starlv();
  inline void set_has_job();
  inline void clear_has_job();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_attack();
  inline void clear_has_attack();
  inline void set_has_defense();
  inline void clear_has_defense();
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_silverplus();
  inline void clear_has_silverplus();
  inline void set_has_unlock();
  inline void clear_has_unlock();
  inline void set_has_buymaterial();
  inline void clear_has_buymaterial();
  inline void set_has_upgradematerial();
  inline void clear_has_upgradematerial();
  inline void set_has_bulleteffect();
  inline void clear_has_bulleteffect();
  inline void set_has_skill();
  inline void clear_has_skill();
  inline void set_has_model();
  inline void clear_has_model();
  inline void set_has_hpfactor();
  inline void clear_has_hpfactor();
  inline void set_has_atfactor();
  inline void clear_has_atfactor();
  inline void set_has_defactor();
  inline void clear_has_defactor();
  inline void set_has_hpgrow();
  inline void clear_has_hpgrow();
  inline void set_has_atgrow();
  inline void clear_has_atgrow();
  inline void set_has_degrow();
  inline void clear_has_degrow();
  inline void set_has_star1itemid();
  inline void clear_has_star1itemid();
  inline void set_has_star1itemnum();
  inline void clear_has_star1itemnum();
  inline void set_has_star2itemid();
  inline void clear_has_star2itemid();
  inline void set_has_star2itemnum();
  inline void clear_has_star2itemnum();
  inline void set_has_star3itemid();
  inline void clear_has_star3itemid();
  inline void set_has_star3itemnum();
  inline void clear_has_star3itemnum();
  inline void set_has_movespeed();
  inline void clear_has_movespeed();
  inline void set_has_moverange();
  inline void clear_has_moverange();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 icon_;
  ::google::protobuf::int32 starlv_;
  ::google::protobuf::int32 job_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 attack_;
  ::google::protobuf::int32 defense_;
  ::google::protobuf::int32 hp_;
  ::google::protobuf::int32 silverplus_;
  ::google::protobuf::int32 unlock_;
  ::google::protobuf::int32 buymaterial_;
  ::google::protobuf::int32 upgradematerial_;
  ::google::protobuf::int32 bulleteffect_;
  ::google::protobuf::int32 skill_;
  ::google::protobuf::int32 model_;
  ::google::protobuf::int32 hpfactor_;
  ::google::protobuf::int32 atfactor_;
  ::google::protobuf::int32 defactor_;
  ::google::protobuf::int32 hpgrow_;
  ::google::protobuf::int32 atgrow_;
  ::google::protobuf::int32 degrow_;
  ::google::protobuf::int32 star1itemid_;
  ::google::protobuf::int32 star1itemnum_;
  ::google::protobuf::int32 star2itemid_;
  ::google::protobuf::int32 star2itemnum_;
  ::google::protobuf::int32 star3itemid_;
  ::google::protobuf::int32 star3itemnum_;
  ::google::protobuf::int32 movespeed_;
  ::google::protobuf::int32 moverange_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(31 + 31) / 32];

  friend void  protobuf_AddDesc_res_2eproto();
  friend void protobuf_AssignDesc_res_2eproto();
  friend void protobuf_ShutdownFile_res_2eproto();

  void InitAsDefaultInstance();
  static Role* default_instance_;
};
// -------------------------------------------------------------------

class Roles : public ::google::protobuf::Message {
 public:
  Roles();
  virtual ~Roles();

  Roles(const Roles& from);

  inline Roles& operator=(const Roles& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Roles& default_instance();

  void Swap(Roles* other);

  // implements Message ----------------------------------------------

  Roles* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Roles& from);
  void MergeFrom(const Roles& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .conf.Role list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::conf::Role& list(int index) const;
  inline ::conf::Role* mutable_list(int index);
  inline ::conf::Role* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::conf::Role >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::conf::Role >*
      mutable_list();

  // @@protoc_insertion_point(class_scope:conf.Roles)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::conf::Role > list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_res_2eproto();
  friend void protobuf_AssignDesc_res_2eproto();
  friend void protobuf_ShutdownFile_res_2eproto();

  void InitAsDefaultInstance();
  static Roles* default_instance_;
};
// -------------------------------------------------------------------

class Award : public ::google::protobuf::Message {
 public:
  Award();
  virtual ~Award();

  Award(const Award& from);

  inline Award& operator=(const Award& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Award& default_instance();

  void Swap(Award* other);

  // implements Message ----------------------------------------------

  Award* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Award& from);
  void MergeFrom(const Award& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 itemID = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIDFieldNumber = 1;
  inline ::google::protobuf::int32 itemid() const;
  inline void set_itemid(::google::protobuf::int32 value);

  // required sint32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // required sint32 weight = 3;
  inline bool has_weight() const;
  inline void clear_weight();
  static const int kWeightFieldNumber = 3;
  inline ::google::protobuf::int32 weight() const;
  inline void set_weight(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:conf.Award)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_weight();
  inline void clear_has_weight();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 itemid_;
  ::google::protobuf::int32 count_;
  ::google::protobuf::int32 weight_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_res_2eproto();
  friend void protobuf_AssignDesc_res_2eproto();
  friend void protobuf_ShutdownFile_res_2eproto();

  void InitAsDefaultInstance();
  static Award* default_instance_;
};
// -------------------------------------------------------------------

class PlayerLevel : public ::google::protobuf::Message {
 public:
  PlayerLevel();
  virtual ~PlayerLevel();

  PlayerLevel(const PlayerLevel& from);

  inline PlayerLevel& operator=(const PlayerLevel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerLevel& default_instance();

  void Swap(PlayerLevel* other);

  // implements Message ----------------------------------------------

  PlayerLevel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerLevel& from);
  void MergeFrom(const PlayerLevel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required sint32 exp = 2;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 2;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:conf.PlayerLevel)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_exp();
  inline void clear_has_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 exp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_res_2eproto();
  friend void protobuf_AssignDesc_res_2eproto();
  friend void protobuf_ShutdownFile_res_2eproto();

  void InitAsDefaultInstance();
  static PlayerLevel* default_instance_;
};
// -------------------------------------------------------------------

class PlayerLevels : public ::google::protobuf::Message {
 public:
  PlayerLevels();
  virtual ~PlayerLevels();

  PlayerLevels(const PlayerLevels& from);

  inline PlayerLevels& operator=(const PlayerLevels& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerLevels& default_instance();

  void Swap(PlayerLevels* other);

  // implements Message ----------------------------------------------

  PlayerLevels* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerLevels& from);
  void MergeFrom(const PlayerLevels& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .conf.PlayerLevel list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::conf::PlayerLevel& list(int index) const;
  inline ::conf::PlayerLevel* mutable_list(int index);
  inline ::conf::PlayerLevel* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::conf::PlayerLevel >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::conf::PlayerLevel >*
      mutable_list();

  // @@protoc_insertion_point(class_scope:conf.PlayerLevels)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::conf::PlayerLevel > list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_res_2eproto();
  friend void protobuf_AssignDesc_res_2eproto();
  friend void protobuf_ShutdownFile_res_2eproto();

  void InitAsDefaultInstance();
  static PlayerLevels* default_instance_;
};
// -------------------------------------------------------------------

class CopyInfo : public ::google::protobuf::Message {
 public:
  CopyInfo();
  virtual ~CopyInfo();

  CopyInfo(const CopyInfo& from);

  inline CopyInfo& operator=(const CopyInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CopyInfo& default_instance();

  void Swap(CopyInfo* other);

  // implements Message ----------------------------------------------

  CopyInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CopyInfo& from);
  void MergeFrom(const CopyInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required sint32 chapterID = 2;
  inline bool has_chapterid() const;
  inline void clear_chapterid();
  static const int kChapterIDFieldNumber = 2;
  inline ::google::protobuf::int32 chapterid() const;
  inline void set_chapterid(::google::protobuf::int32 value);

  // required string chapterName = 3;
  inline bool has_chaptername() const;
  inline void clear_chaptername();
  static const int kChapterNameFieldNumber = 3;
  inline const ::std::string& chaptername() const;
  inline void set_chaptername(const ::std::string& value);
  inline void set_chaptername(const char* value);
  inline void set_chaptername(const char* value, size_t size);
  inline ::std::string* mutable_chaptername();
  inline ::std::string* release_chaptername();
  inline void set_allocated_chaptername(::std::string* chaptername);

  // required string missionName = 4;
  inline bool has_missionname() const;
  inline void clear_missionname();
  static const int kMissionNameFieldNumber = 4;
  inline const ::std::string& missionname() const;
  inline void set_missionname(const ::std::string& value);
  inline void set_missionname(const char* value);
  inline void set_missionname(const char* value, size_t size);
  inline ::std::string* mutable_missionname();
  inline ::std::string* release_missionname();
  inline void set_allocated_missionname(::std::string* missionname);

  // required sint32 missionType = 5;
  inline bool has_missiontype() const;
  inline void clear_missiontype();
  static const int kMissionTypeFieldNumber = 5;
  inline ::google::protobuf::int32 missiontype() const;
  inline void set_missiontype(::google::protobuf::int32 value);

  // required string missionDesc = 6;
  inline bool has_missiondesc() const;
  inline void clear_missiondesc();
  static const int kMissionDescFieldNumber = 6;
  inline const ::std::string& missiondesc() const;
  inline void set_missiondesc(const ::std::string& value);
  inline void set_missiondesc(const char* value);
  inline void set_missiondesc(const char* value, size_t size);
  inline ::std::string* mutable_missiondesc();
  inline ::std::string* release_missiondesc();
  inline void set_allocated_missiondesc(::std::string* missiondesc);

  // required sint32 playerLevel = 7;
  inline bool has_playerlevel() const;
  inline void clear_playerlevel();
  static const int kPlayerLevelFieldNumber = 7;
  inline ::google::protobuf::int32 playerlevel() const;
  inline void set_playerlevel(::google::protobuf::int32 value);

  // required sint32 preMission = 8;
  inline bool has_premission() const;
  inline void clear_premission();
  static const int kPreMissionFieldNumber = 8;
  inline ::google::protobuf::int32 premission() const;
  inline void set_premission(::google::protobuf::int32 value);

  // required sint32 roleIDLimit = 9;
  inline bool has_roleidlimit() const;
  inline void clear_roleidlimit();
  static const int kRoleIDLimitFieldNumber = 9;
  inline ::google::protobuf::int32 roleidlimit() const;
  inline void set_roleidlimit(::google::protobuf::int32 value);

  // required sint32 taskLimit = 10;
  inline bool has_tasklimit() const;
  inline void clear_tasklimit();
  static const int kTaskLimitFieldNumber = 10;
  inline ::google::protobuf::int32 tasklimit() const;
  inline void set_tasklimit(::google::protobuf::int32 value);

  // required sint32 silverAward = 11;
  inline bool has_silveraward() const;
  inline void clear_silveraward();
  static const int kSilverAwardFieldNumber = 11;
  inline ::google::protobuf::int32 silveraward() const;
  inline void set_silveraward(::google::protobuf::int32 value);

  // required sint32 expAward = 12;
  inline bool has_expaward() const;
  inline void clear_expaward();
  static const int kExpAwardFieldNumber = 12;
  inline ::google::protobuf::int32 expaward() const;
  inline void set_expaward(::google::protobuf::int32 value);

  // repeated .conf.Award awardList = 13;
  inline int awardlist_size() const;
  inline void clear_awardlist();
  static const int kAwardListFieldNumber = 13;
  inline const ::conf::Award& awardlist(int index) const;
  inline ::conf::Award* mutable_awardlist(int index);
  inline ::conf::Award* add_awardlist();
  inline const ::google::protobuf::RepeatedPtrField< ::conf::Award >&
      awardlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::conf::Award >*
      mutable_awardlist();

  // @@protoc_insertion_point(class_scope:conf.CopyInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_chapterid();
  inline void clear_has_chapterid();
  inline void set_has_chaptername();
  inline void clear_has_chaptername();
  inline void set_has_missionname();
  inline void clear_has_missionname();
  inline void set_has_missiontype();
  inline void clear_has_missiontype();
  inline void set_has_missiondesc();
  inline void clear_has_missiondesc();
  inline void set_has_playerlevel();
  inline void clear_has_playerlevel();
  inline void set_has_premission();
  inline void clear_has_premission();
  inline void set_has_roleidlimit();
  inline void clear_has_roleidlimit();
  inline void set_has_tasklimit();
  inline void clear_has_tasklimit();
  inline void set_has_silveraward();
  inline void clear_has_silveraward();
  inline void set_has_expaward();
  inline void clear_has_expaward();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 chapterid_;
  ::std::string* chaptername_;
  ::std::string* missionname_;
  ::google::protobuf::int32 missiontype_;
  ::google::protobuf::int32 playerlevel_;
  ::std::string* missiondesc_;
  ::google::protobuf::int32 premission_;
  ::google::protobuf::int32 roleidlimit_;
  ::google::protobuf::int32 tasklimit_;
  ::google::protobuf::int32 silveraward_;
  ::google::protobuf::RepeatedPtrField< ::conf::Award > awardlist_;
  ::google::protobuf::int32 expaward_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];

  friend void  protobuf_AddDesc_res_2eproto();
  friend void protobuf_AssignDesc_res_2eproto();
  friend void protobuf_ShutdownFile_res_2eproto();

  void InitAsDefaultInstance();
  static CopyInfo* default_instance_;
};
// -------------------------------------------------------------------

class CopyInfos : public ::google::protobuf::Message {
 public:
  CopyInfos();
  virtual ~CopyInfos();

  CopyInfos(const CopyInfos& from);

  inline CopyInfos& operator=(const CopyInfos& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CopyInfos& default_instance();

  void Swap(CopyInfos* other);

  // implements Message ----------------------------------------------

  CopyInfos* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CopyInfos& from);
  void MergeFrom(const CopyInfos& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .conf.CopyInfo list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::conf::CopyInfo& list(int index) const;
  inline ::conf::CopyInfo* mutable_list(int index);
  inline ::conf::CopyInfo* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::conf::CopyInfo >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::conf::CopyInfo >*
      mutable_list();

  // @@protoc_insertion_point(class_scope:conf.CopyInfos)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::conf::CopyInfo > list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_res_2eproto();
  friend void protobuf_AssignDesc_res_2eproto();
  friend void protobuf_ShutdownFile_res_2eproto();

  void InitAsDefaultInstance();
  static CopyInfos* default_instance_;
};
// -------------------------------------------------------------------

class RoleLevel : public ::google::protobuf::Message {
 public:
  RoleLevel();
  virtual ~RoleLevel();

  RoleLevel(const RoleLevel& from);

  inline RoleLevel& operator=(const RoleLevel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleLevel& default_instance();

  void Swap(RoleLevel* other);

  // implements Message ----------------------------------------------

  RoleLevel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleLevel& from);
  void MergeFrom(const RoleLevel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required sint32 silver = 2;
  inline bool has_silver() const;
  inline void clear_silver();
  static const int kSilverFieldNumber = 2;
  inline ::google::protobuf::int32 silver() const;
  inline void set_silver(::google::protobuf::int32 value);

  // required sint32 gold = 3;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 3;
  inline ::google::protobuf::int32 gold() const;
  inline void set_gold(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:conf.RoleLevel)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_silver();
  inline void clear_has_silver();
  inline void set_has_gold();
  inline void clear_has_gold();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 silver_;
  ::google::protobuf::int32 gold_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_res_2eproto();
  friend void protobuf_AssignDesc_res_2eproto();
  friend void protobuf_ShutdownFile_res_2eproto();

  void InitAsDefaultInstance();
  static RoleLevel* default_instance_;
};
// -------------------------------------------------------------------

class RoleLevels : public ::google::protobuf::Message {
 public:
  RoleLevels();
  virtual ~RoleLevels();

  RoleLevels(const RoleLevels& from);

  inline RoleLevels& operator=(const RoleLevels& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleLevels& default_instance();

  void Swap(RoleLevels* other);

  // implements Message ----------------------------------------------

  RoleLevels* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleLevels& from);
  void MergeFrom(const RoleLevels& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .conf.RoleLevel list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::conf::RoleLevel& list(int index) const;
  inline ::conf::RoleLevel* mutable_list(int index);
  inline ::conf::RoleLevel* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::conf::RoleLevel >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::conf::RoleLevel >*
      mutable_list();

  // @@protoc_insertion_point(class_scope:conf.RoleLevels)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::conf::RoleLevel > list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_res_2eproto();
  friend void protobuf_AssignDesc_res_2eproto();
  friend void protobuf_ShutdownFile_res_2eproto();

  void InitAsDefaultInstance();
  static RoleLevels* default_instance_;
};
// -------------------------------------------------------------------

class PlayerBirth : public ::google::protobuf::Message {
 public:
  PlayerBirth();
  virtual ~PlayerBirth();

  PlayerBirth(const PlayerBirth& from);

  inline PlayerBirth& operator=(const PlayerBirth& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerBirth& default_instance();

  void Swap(PlayerBirth* other);

  // implements Message ----------------------------------------------

  PlayerBirth* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerBirth& from);
  void MergeFrom(const PlayerBirth& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required sint32 roleID = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 2;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // required sint32 passID = 3;
  inline bool has_passid() const;
  inline void clear_passid();
  static const int kPassIDFieldNumber = 3;
  inline ::google::protobuf::int32 passid() const;
  inline void set_passid(::google::protobuf::int32 value);

  // repeated .conf.ResDes res = 4;
  inline int res_size() const;
  inline void clear_res();
  static const int kResFieldNumber = 4;
  inline const ::conf::ResDes& res(int index) const;
  inline ::conf::ResDes* mutable_res(int index);
  inline ::conf::ResDes* add_res();
  inline const ::google::protobuf::RepeatedPtrField< ::conf::ResDes >&
      res() const;
  inline ::google::protobuf::RepeatedPtrField< ::conf::ResDes >*
      mutable_res();

  // @@protoc_insertion_point(class_scope:conf.PlayerBirth)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_passid();
  inline void clear_has_passid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 roleid_;
  ::google::protobuf::RepeatedPtrField< ::conf::ResDes > res_;
  ::google::protobuf::int32 passid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_res_2eproto();
  friend void protobuf_AssignDesc_res_2eproto();
  friend void protobuf_ShutdownFile_res_2eproto();

  void InitAsDefaultInstance();
  static PlayerBirth* default_instance_;
};
// -------------------------------------------------------------------

class PlayerBirths : public ::google::protobuf::Message {
 public:
  PlayerBirths();
  virtual ~PlayerBirths();

  PlayerBirths(const PlayerBirths& from);

  inline PlayerBirths& operator=(const PlayerBirths& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerBirths& default_instance();

  void Swap(PlayerBirths* other);

  // implements Message ----------------------------------------------

  PlayerBirths* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerBirths& from);
  void MergeFrom(const PlayerBirths& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .conf.PlayerBirth list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::conf::PlayerBirth& list(int index) const;
  inline ::conf::PlayerBirth* mutable_list(int index);
  inline ::conf::PlayerBirth* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::conf::PlayerBirth >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::conf::PlayerBirth >*
      mutable_list();

  // @@protoc_insertion_point(class_scope:conf.PlayerBirths)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::conf::PlayerBirth > list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_res_2eproto();
  friend void protobuf_AssignDesc_res_2eproto();
  friend void protobuf_ShutdownFile_res_2eproto();

  void InitAsDefaultInstance();
  static PlayerBirths* default_instance_;
};
// ===================================================================


// ===================================================================

// ResDes

// required sint32 resID = 1;
inline bool ResDes::has_resid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResDes::set_has_resid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResDes::clear_has_resid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResDes::clear_resid() {
  resid_ = 0;
  clear_has_resid();
}
inline ::google::protobuf::int32 ResDes::resid() const {
  return resid_;
}
inline void ResDes::set_resid(::google::protobuf::int32 value) {
  set_has_resid();
  resid_ = value;
}

// required sint32 resNum = 2;
inline bool ResDes::has_resnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResDes::set_has_resnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResDes::clear_has_resnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResDes::clear_resnum() {
  resnum_ = 0;
  clear_has_resnum();
}
inline ::google::protobuf::int32 ResDes::resnum() const {
  return resnum_;
}
inline void ResDes::set_resnum(::google::protobuf::int32 value) {
  set_has_resnum();
  resnum_ = value;
}

// -------------------------------------------------------------------

// Role

// required sint32 id = 1;
inline bool Role::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Role::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Role::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Role::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Role::id() const {
  return id_;
}
inline void Role::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required string name = 2;
inline bool Role::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Role::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Role::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Role::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& Role::name() const {
  return *name_;
}
inline void Role::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void Role::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void Role::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Role::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* Role::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Role::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required sint32 icon = 3;
inline bool Role::has_icon() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Role::set_has_icon() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Role::clear_has_icon() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Role::clear_icon() {
  icon_ = 0;
  clear_has_icon();
}
inline ::google::protobuf::int32 Role::icon() const {
  return icon_;
}
inline void Role::set_icon(::google::protobuf::int32 value) {
  set_has_icon();
  icon_ = value;
}

// required sint32 starLv = 4;
inline bool Role::has_starlv() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Role::set_has_starlv() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Role::clear_has_starlv() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Role::clear_starlv() {
  starlv_ = 0;
  clear_has_starlv();
}
inline ::google::protobuf::int32 Role::starlv() const {
  return starlv_;
}
inline void Role::set_starlv(::google::protobuf::int32 value) {
  set_has_starlv();
  starlv_ = value;
}

// required sint32 job = 5;
inline bool Role::has_job() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Role::set_has_job() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Role::clear_has_job() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Role::clear_job() {
  job_ = 0;
  clear_has_job();
}
inline ::google::protobuf::int32 Role::job() const {
  return job_;
}
inline void Role::set_job(::google::protobuf::int32 value) {
  set_has_job();
  job_ = value;
}

// required sint32 level = 6;
inline bool Role::has_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Role::set_has_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Role::clear_has_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Role::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 Role::level() const {
  return level_;
}
inline void Role::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// required sint32 attack = 7;
inline bool Role::has_attack() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Role::set_has_attack() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Role::clear_has_attack() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Role::clear_attack() {
  attack_ = 0;
  clear_has_attack();
}
inline ::google::protobuf::int32 Role::attack() const {
  return attack_;
}
inline void Role::set_attack(::google::protobuf::int32 value) {
  set_has_attack();
  attack_ = value;
}

// required sint32 defense = 8;
inline bool Role::has_defense() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Role::set_has_defense() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Role::clear_has_defense() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Role::clear_defense() {
  defense_ = 0;
  clear_has_defense();
}
inline ::google::protobuf::int32 Role::defense() const {
  return defense_;
}
inline void Role::set_defense(::google::protobuf::int32 value) {
  set_has_defense();
  defense_ = value;
}

// required sint32 hp = 9;
inline bool Role::has_hp() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Role::set_has_hp() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Role::clear_has_hp() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Role::clear_hp() {
  hp_ = 0;
  clear_has_hp();
}
inline ::google::protobuf::int32 Role::hp() const {
  return hp_;
}
inline void Role::set_hp(::google::protobuf::int32 value) {
  set_has_hp();
  hp_ = value;
}

// required sint32 silverPlus = 10;
inline bool Role::has_silverplus() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Role::set_has_silverplus() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Role::clear_has_silverplus() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Role::clear_silverplus() {
  silverplus_ = 0;
  clear_has_silverplus();
}
inline ::google::protobuf::int32 Role::silverplus() const {
  return silverplus_;
}
inline void Role::set_silverplus(::google::protobuf::int32 value) {
  set_has_silverplus();
  silverplus_ = value;
}

// required sint32 unlock = 11;
inline bool Role::has_unlock() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Role::set_has_unlock() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Role::clear_has_unlock() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Role::clear_unlock() {
  unlock_ = 0;
  clear_has_unlock();
}
inline ::google::protobuf::int32 Role::unlock() const {
  return unlock_;
}
inline void Role::set_unlock(::google::protobuf::int32 value) {
  set_has_unlock();
  unlock_ = value;
}

// required sint32 buyMaterial = 12;
inline bool Role::has_buymaterial() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Role::set_has_buymaterial() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Role::clear_has_buymaterial() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Role::clear_buymaterial() {
  buymaterial_ = 0;
  clear_has_buymaterial();
}
inline ::google::protobuf::int32 Role::buymaterial() const {
  return buymaterial_;
}
inline void Role::set_buymaterial(::google::protobuf::int32 value) {
  set_has_buymaterial();
  buymaterial_ = value;
}

// required sint32 upgradeMaterial = 13;
inline bool Role::has_upgradematerial() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Role::set_has_upgradematerial() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Role::clear_has_upgradematerial() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Role::clear_upgradematerial() {
  upgradematerial_ = 0;
  clear_has_upgradematerial();
}
inline ::google::protobuf::int32 Role::upgradematerial() const {
  return upgradematerial_;
}
inline void Role::set_upgradematerial(::google::protobuf::int32 value) {
  set_has_upgradematerial();
  upgradematerial_ = value;
}

// required sint32 bulletEffect = 14;
inline bool Role::has_bulleteffect() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Role::set_has_bulleteffect() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Role::clear_has_bulleteffect() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Role::clear_bulleteffect() {
  bulleteffect_ = 0;
  clear_has_bulleteffect();
}
inline ::google::protobuf::int32 Role::bulleteffect() const {
  return bulleteffect_;
}
inline void Role::set_bulleteffect(::google::protobuf::int32 value) {
  set_has_bulleteffect();
  bulleteffect_ = value;
}

// required sint32 skill = 15;
inline bool Role::has_skill() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Role::set_has_skill() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Role::clear_has_skill() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void Role::clear_skill() {
  skill_ = 0;
  clear_has_skill();
}
inline ::google::protobuf::int32 Role::skill() const {
  return skill_;
}
inline void Role::set_skill(::google::protobuf::int32 value) {
  set_has_skill();
  skill_ = value;
}

// required sint32 model = 16;
inline bool Role::has_model() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void Role::set_has_model() {
  _has_bits_[0] |= 0x00008000u;
}
inline void Role::clear_has_model() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void Role::clear_model() {
  model_ = 0;
  clear_has_model();
}
inline ::google::protobuf::int32 Role::model() const {
  return model_;
}
inline void Role::set_model(::google::protobuf::int32 value) {
  set_has_model();
  model_ = value;
}

// required sint32 hpFactor = 17;
inline bool Role::has_hpfactor() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void Role::set_has_hpfactor() {
  _has_bits_[0] |= 0x00010000u;
}
inline void Role::clear_has_hpfactor() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void Role::clear_hpfactor() {
  hpfactor_ = 0;
  clear_has_hpfactor();
}
inline ::google::protobuf::int32 Role::hpfactor() const {
  return hpfactor_;
}
inline void Role::set_hpfactor(::google::protobuf::int32 value) {
  set_has_hpfactor();
  hpfactor_ = value;
}

// required sint32 atFactor = 18;
inline bool Role::has_atfactor() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void Role::set_has_atfactor() {
  _has_bits_[0] |= 0x00020000u;
}
inline void Role::clear_has_atfactor() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void Role::clear_atfactor() {
  atfactor_ = 0;
  clear_has_atfactor();
}
inline ::google::protobuf::int32 Role::atfactor() const {
  return atfactor_;
}
inline void Role::set_atfactor(::google::protobuf::int32 value) {
  set_has_atfactor();
  atfactor_ = value;
}

// required sint32 deFactor = 19;
inline bool Role::has_defactor() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void Role::set_has_defactor() {
  _has_bits_[0] |= 0x00040000u;
}
inline void Role::clear_has_defactor() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void Role::clear_defactor() {
  defactor_ = 0;
  clear_has_defactor();
}
inline ::google::protobuf::int32 Role::defactor() const {
  return defactor_;
}
inline void Role::set_defactor(::google::protobuf::int32 value) {
  set_has_defactor();
  defactor_ = value;
}

// required sint32 hpGrow = 20;
inline bool Role::has_hpgrow() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void Role::set_has_hpgrow() {
  _has_bits_[0] |= 0x00080000u;
}
inline void Role::clear_has_hpgrow() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void Role::clear_hpgrow() {
  hpgrow_ = 0;
  clear_has_hpgrow();
}
inline ::google::protobuf::int32 Role::hpgrow() const {
  return hpgrow_;
}
inline void Role::set_hpgrow(::google::protobuf::int32 value) {
  set_has_hpgrow();
  hpgrow_ = value;
}

// required sint32 atGrow = 21;
inline bool Role::has_atgrow() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void Role::set_has_atgrow() {
  _has_bits_[0] |= 0x00100000u;
}
inline void Role::clear_has_atgrow() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void Role::clear_atgrow() {
  atgrow_ = 0;
  clear_has_atgrow();
}
inline ::google::protobuf::int32 Role::atgrow() const {
  return atgrow_;
}
inline void Role::set_atgrow(::google::protobuf::int32 value) {
  set_has_atgrow();
  atgrow_ = value;
}

// required sint32 deGrow = 22;
inline bool Role::has_degrow() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void Role::set_has_degrow() {
  _has_bits_[0] |= 0x00200000u;
}
inline void Role::clear_has_degrow() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void Role::clear_degrow() {
  degrow_ = 0;
  clear_has_degrow();
}
inline ::google::protobuf::int32 Role::degrow() const {
  return degrow_;
}
inline void Role::set_degrow(::google::protobuf::int32 value) {
  set_has_degrow();
  degrow_ = value;
}

// required sint32 star1ItemID = 23;
inline bool Role::has_star1itemid() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void Role::set_has_star1itemid() {
  _has_bits_[0] |= 0x00400000u;
}
inline void Role::clear_has_star1itemid() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void Role::clear_star1itemid() {
  star1itemid_ = 0;
  clear_has_star1itemid();
}
inline ::google::protobuf::int32 Role::star1itemid() const {
  return star1itemid_;
}
inline void Role::set_star1itemid(::google::protobuf::int32 value) {
  set_has_star1itemid();
  star1itemid_ = value;
}

// required sint32 star1ItemNum = 24;
inline bool Role::has_star1itemnum() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void Role::set_has_star1itemnum() {
  _has_bits_[0] |= 0x00800000u;
}
inline void Role::clear_has_star1itemnum() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void Role::clear_star1itemnum() {
  star1itemnum_ = 0;
  clear_has_star1itemnum();
}
inline ::google::protobuf::int32 Role::star1itemnum() const {
  return star1itemnum_;
}
inline void Role::set_star1itemnum(::google::protobuf::int32 value) {
  set_has_star1itemnum();
  star1itemnum_ = value;
}

// required sint32 star2ItemID = 25;
inline bool Role::has_star2itemid() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void Role::set_has_star2itemid() {
  _has_bits_[0] |= 0x01000000u;
}
inline void Role::clear_has_star2itemid() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void Role::clear_star2itemid() {
  star2itemid_ = 0;
  clear_has_star2itemid();
}
inline ::google::protobuf::int32 Role::star2itemid() const {
  return star2itemid_;
}
inline void Role::set_star2itemid(::google::protobuf::int32 value) {
  set_has_star2itemid();
  star2itemid_ = value;
}

// required sint32 star2ItemNum = 26;
inline bool Role::has_star2itemnum() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void Role::set_has_star2itemnum() {
  _has_bits_[0] |= 0x02000000u;
}
inline void Role::clear_has_star2itemnum() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void Role::clear_star2itemnum() {
  star2itemnum_ = 0;
  clear_has_star2itemnum();
}
inline ::google::protobuf::int32 Role::star2itemnum() const {
  return star2itemnum_;
}
inline void Role::set_star2itemnum(::google::protobuf::int32 value) {
  set_has_star2itemnum();
  star2itemnum_ = value;
}

// required sint32 star3ItemID = 27;
inline bool Role::has_star3itemid() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void Role::set_has_star3itemid() {
  _has_bits_[0] |= 0x04000000u;
}
inline void Role::clear_has_star3itemid() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void Role::clear_star3itemid() {
  star3itemid_ = 0;
  clear_has_star3itemid();
}
inline ::google::protobuf::int32 Role::star3itemid() const {
  return star3itemid_;
}
inline void Role::set_star3itemid(::google::protobuf::int32 value) {
  set_has_star3itemid();
  star3itemid_ = value;
}

// required sint32 star3ItemNum = 28;
inline bool Role::has_star3itemnum() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void Role::set_has_star3itemnum() {
  _has_bits_[0] |= 0x08000000u;
}
inline void Role::clear_has_star3itemnum() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void Role::clear_star3itemnum() {
  star3itemnum_ = 0;
  clear_has_star3itemnum();
}
inline ::google::protobuf::int32 Role::star3itemnum() const {
  return star3itemnum_;
}
inline void Role::set_star3itemnum(::google::protobuf::int32 value) {
  set_has_star3itemnum();
  star3itemnum_ = value;
}

// required sint32 moveSpeed = 29;
inline bool Role::has_movespeed() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void Role::set_has_movespeed() {
  _has_bits_[0] |= 0x10000000u;
}
inline void Role::clear_has_movespeed() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void Role::clear_movespeed() {
  movespeed_ = 0;
  clear_has_movespeed();
}
inline ::google::protobuf::int32 Role::movespeed() const {
  return movespeed_;
}
inline void Role::set_movespeed(::google::protobuf::int32 value) {
  set_has_movespeed();
  movespeed_ = value;
}

// required sint32 moveRange = 30;
inline bool Role::has_moverange() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void Role::set_has_moverange() {
  _has_bits_[0] |= 0x20000000u;
}
inline void Role::clear_has_moverange() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void Role::clear_moverange() {
  moverange_ = 0;
  clear_has_moverange();
}
inline ::google::protobuf::int32 Role::moverange() const {
  return moverange_;
}
inline void Role::set_moverange(::google::protobuf::int32 value) {
  set_has_moverange();
  moverange_ = value;
}

// required sint32 type = 31;
inline bool Role::has_type() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void Role::set_has_type() {
  _has_bits_[0] |= 0x40000000u;
}
inline void Role::clear_has_type() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void Role::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 Role::type() const {
  return type_;
}
inline void Role::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// Roles

// repeated .conf.Role list = 1;
inline int Roles::list_size() const {
  return list_.size();
}
inline void Roles::clear_list() {
  list_.Clear();
}
inline const ::conf::Role& Roles::list(int index) const {
  return list_.Get(index);
}
inline ::conf::Role* Roles::mutable_list(int index) {
  return list_.Mutable(index);
}
inline ::conf::Role* Roles::add_list() {
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::conf::Role >&
Roles::list() const {
  return list_;
}
inline ::google::protobuf::RepeatedPtrField< ::conf::Role >*
Roles::mutable_list() {
  return &list_;
}

// -------------------------------------------------------------------

// Award

// required sint32 itemID = 1;
inline bool Award::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Award::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Award::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Award::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
inline ::google::protobuf::int32 Award::itemid() const {
  return itemid_;
}
inline void Award::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
}

// required sint32 count = 2;
inline bool Award::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Award::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Award::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Award::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 Award::count() const {
  return count_;
}
inline void Award::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// required sint32 weight = 3;
inline bool Award::has_weight() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Award::set_has_weight() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Award::clear_has_weight() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Award::clear_weight() {
  weight_ = 0;
  clear_has_weight();
}
inline ::google::protobuf::int32 Award::weight() const {
  return weight_;
}
inline void Award::set_weight(::google::protobuf::int32 value) {
  set_has_weight();
  weight_ = value;
}

// -------------------------------------------------------------------

// PlayerLevel

// required sint32 id = 1;
inline bool PlayerLevel::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerLevel::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerLevel::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerLevel::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 PlayerLevel::id() const {
  return id_;
}
inline void PlayerLevel::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required sint32 exp = 2;
inline bool PlayerLevel::has_exp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerLevel::set_has_exp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerLevel::clear_has_exp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerLevel::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 PlayerLevel::exp() const {
  return exp_;
}
inline void PlayerLevel::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// -------------------------------------------------------------------

// PlayerLevels

// repeated .conf.PlayerLevel list = 1;
inline int PlayerLevels::list_size() const {
  return list_.size();
}
inline void PlayerLevels::clear_list() {
  list_.Clear();
}
inline const ::conf::PlayerLevel& PlayerLevels::list(int index) const {
  return list_.Get(index);
}
inline ::conf::PlayerLevel* PlayerLevels::mutable_list(int index) {
  return list_.Mutable(index);
}
inline ::conf::PlayerLevel* PlayerLevels::add_list() {
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::conf::PlayerLevel >&
PlayerLevels::list() const {
  return list_;
}
inline ::google::protobuf::RepeatedPtrField< ::conf::PlayerLevel >*
PlayerLevels::mutable_list() {
  return &list_;
}

// -------------------------------------------------------------------

// CopyInfo

// required sint32 id = 1;
inline bool CopyInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CopyInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CopyInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CopyInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 CopyInfo::id() const {
  return id_;
}
inline void CopyInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required sint32 chapterID = 2;
inline bool CopyInfo::has_chapterid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CopyInfo::set_has_chapterid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CopyInfo::clear_has_chapterid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CopyInfo::clear_chapterid() {
  chapterid_ = 0;
  clear_has_chapterid();
}
inline ::google::protobuf::int32 CopyInfo::chapterid() const {
  return chapterid_;
}
inline void CopyInfo::set_chapterid(::google::protobuf::int32 value) {
  set_has_chapterid();
  chapterid_ = value;
}

// required string chapterName = 3;
inline bool CopyInfo::has_chaptername() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CopyInfo::set_has_chaptername() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CopyInfo::clear_has_chaptername() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CopyInfo::clear_chaptername() {
  if (chaptername_ != &::google::protobuf::internal::kEmptyString) {
    chaptername_->clear();
  }
  clear_has_chaptername();
}
inline const ::std::string& CopyInfo::chaptername() const {
  return *chaptername_;
}
inline void CopyInfo::set_chaptername(const ::std::string& value) {
  set_has_chaptername();
  if (chaptername_ == &::google::protobuf::internal::kEmptyString) {
    chaptername_ = new ::std::string;
  }
  chaptername_->assign(value);
}
inline void CopyInfo::set_chaptername(const char* value) {
  set_has_chaptername();
  if (chaptername_ == &::google::protobuf::internal::kEmptyString) {
    chaptername_ = new ::std::string;
  }
  chaptername_->assign(value);
}
inline void CopyInfo::set_chaptername(const char* value, size_t size) {
  set_has_chaptername();
  if (chaptername_ == &::google::protobuf::internal::kEmptyString) {
    chaptername_ = new ::std::string;
  }
  chaptername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CopyInfo::mutable_chaptername() {
  set_has_chaptername();
  if (chaptername_ == &::google::protobuf::internal::kEmptyString) {
    chaptername_ = new ::std::string;
  }
  return chaptername_;
}
inline ::std::string* CopyInfo::release_chaptername() {
  clear_has_chaptername();
  if (chaptername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = chaptername_;
    chaptername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CopyInfo::set_allocated_chaptername(::std::string* chaptername) {
  if (chaptername_ != &::google::protobuf::internal::kEmptyString) {
    delete chaptername_;
  }
  if (chaptername) {
    set_has_chaptername();
    chaptername_ = chaptername;
  } else {
    clear_has_chaptername();
    chaptername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string missionName = 4;
inline bool CopyInfo::has_missionname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CopyInfo::set_has_missionname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CopyInfo::clear_has_missionname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CopyInfo::clear_missionname() {
  if (missionname_ != &::google::protobuf::internal::kEmptyString) {
    missionname_->clear();
  }
  clear_has_missionname();
}
inline const ::std::string& CopyInfo::missionname() const {
  return *missionname_;
}
inline void CopyInfo::set_missionname(const ::std::string& value) {
  set_has_missionname();
  if (missionname_ == &::google::protobuf::internal::kEmptyString) {
    missionname_ = new ::std::string;
  }
  missionname_->assign(value);
}
inline void CopyInfo::set_missionname(const char* value) {
  set_has_missionname();
  if (missionname_ == &::google::protobuf::internal::kEmptyString) {
    missionname_ = new ::std::string;
  }
  missionname_->assign(value);
}
inline void CopyInfo::set_missionname(const char* value, size_t size) {
  set_has_missionname();
  if (missionname_ == &::google::protobuf::internal::kEmptyString) {
    missionname_ = new ::std::string;
  }
  missionname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CopyInfo::mutable_missionname() {
  set_has_missionname();
  if (missionname_ == &::google::protobuf::internal::kEmptyString) {
    missionname_ = new ::std::string;
  }
  return missionname_;
}
inline ::std::string* CopyInfo::release_missionname() {
  clear_has_missionname();
  if (missionname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = missionname_;
    missionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CopyInfo::set_allocated_missionname(::std::string* missionname) {
  if (missionname_ != &::google::protobuf::internal::kEmptyString) {
    delete missionname_;
  }
  if (missionname) {
    set_has_missionname();
    missionname_ = missionname;
  } else {
    clear_has_missionname();
    missionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required sint32 missionType = 5;
inline bool CopyInfo::has_missiontype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CopyInfo::set_has_missiontype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CopyInfo::clear_has_missiontype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CopyInfo::clear_missiontype() {
  missiontype_ = 0;
  clear_has_missiontype();
}
inline ::google::protobuf::int32 CopyInfo::missiontype() const {
  return missiontype_;
}
inline void CopyInfo::set_missiontype(::google::protobuf::int32 value) {
  set_has_missiontype();
  missiontype_ = value;
}

// required string missionDesc = 6;
inline bool CopyInfo::has_missiondesc() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CopyInfo::set_has_missiondesc() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CopyInfo::clear_has_missiondesc() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CopyInfo::clear_missiondesc() {
  if (missiondesc_ != &::google::protobuf::internal::kEmptyString) {
    missiondesc_->clear();
  }
  clear_has_missiondesc();
}
inline const ::std::string& CopyInfo::missiondesc() const {
  return *missiondesc_;
}
inline void CopyInfo::set_missiondesc(const ::std::string& value) {
  set_has_missiondesc();
  if (missiondesc_ == &::google::protobuf::internal::kEmptyString) {
    missiondesc_ = new ::std::string;
  }
  missiondesc_->assign(value);
}
inline void CopyInfo::set_missiondesc(const char* value) {
  set_has_missiondesc();
  if (missiondesc_ == &::google::protobuf::internal::kEmptyString) {
    missiondesc_ = new ::std::string;
  }
  missiondesc_->assign(value);
}
inline void CopyInfo::set_missiondesc(const char* value, size_t size) {
  set_has_missiondesc();
  if (missiondesc_ == &::google::protobuf::internal::kEmptyString) {
    missiondesc_ = new ::std::string;
  }
  missiondesc_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CopyInfo::mutable_missiondesc() {
  set_has_missiondesc();
  if (missiondesc_ == &::google::protobuf::internal::kEmptyString) {
    missiondesc_ = new ::std::string;
  }
  return missiondesc_;
}
inline ::std::string* CopyInfo::release_missiondesc() {
  clear_has_missiondesc();
  if (missiondesc_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = missiondesc_;
    missiondesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CopyInfo::set_allocated_missiondesc(::std::string* missiondesc) {
  if (missiondesc_ != &::google::protobuf::internal::kEmptyString) {
    delete missiondesc_;
  }
  if (missiondesc) {
    set_has_missiondesc();
    missiondesc_ = missiondesc;
  } else {
    clear_has_missiondesc();
    missiondesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required sint32 playerLevel = 7;
inline bool CopyInfo::has_playerlevel() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CopyInfo::set_has_playerlevel() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CopyInfo::clear_has_playerlevel() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CopyInfo::clear_playerlevel() {
  playerlevel_ = 0;
  clear_has_playerlevel();
}
inline ::google::protobuf::int32 CopyInfo::playerlevel() const {
  return playerlevel_;
}
inline void CopyInfo::set_playerlevel(::google::protobuf::int32 value) {
  set_has_playerlevel();
  playerlevel_ = value;
}

// required sint32 preMission = 8;
inline bool CopyInfo::has_premission() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CopyInfo::set_has_premission() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CopyInfo::clear_has_premission() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CopyInfo::clear_premission() {
  premission_ = 0;
  clear_has_premission();
}
inline ::google::protobuf::int32 CopyInfo::premission() const {
  return premission_;
}
inline void CopyInfo::set_premission(::google::protobuf::int32 value) {
  set_has_premission();
  premission_ = value;
}

// required sint32 roleIDLimit = 9;
inline bool CopyInfo::has_roleidlimit() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CopyInfo::set_has_roleidlimit() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CopyInfo::clear_has_roleidlimit() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CopyInfo::clear_roleidlimit() {
  roleidlimit_ = 0;
  clear_has_roleidlimit();
}
inline ::google::protobuf::int32 CopyInfo::roleidlimit() const {
  return roleidlimit_;
}
inline void CopyInfo::set_roleidlimit(::google::protobuf::int32 value) {
  set_has_roleidlimit();
  roleidlimit_ = value;
}

// required sint32 taskLimit = 10;
inline bool CopyInfo::has_tasklimit() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CopyInfo::set_has_tasklimit() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CopyInfo::clear_has_tasklimit() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CopyInfo::clear_tasklimit() {
  tasklimit_ = 0;
  clear_has_tasklimit();
}
inline ::google::protobuf::int32 CopyInfo::tasklimit() const {
  return tasklimit_;
}
inline void CopyInfo::set_tasklimit(::google::protobuf::int32 value) {
  set_has_tasklimit();
  tasklimit_ = value;
}

// required sint32 silverAward = 11;
inline bool CopyInfo::has_silveraward() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CopyInfo::set_has_silveraward() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CopyInfo::clear_has_silveraward() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CopyInfo::clear_silveraward() {
  silveraward_ = 0;
  clear_has_silveraward();
}
inline ::google::protobuf::int32 CopyInfo::silveraward() const {
  return silveraward_;
}
inline void CopyInfo::set_silveraward(::google::protobuf::int32 value) {
  set_has_silveraward();
  silveraward_ = value;
}

// required sint32 expAward = 12;
inline bool CopyInfo::has_expaward() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CopyInfo::set_has_expaward() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CopyInfo::clear_has_expaward() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CopyInfo::clear_expaward() {
  expaward_ = 0;
  clear_has_expaward();
}
inline ::google::protobuf::int32 CopyInfo::expaward() const {
  return expaward_;
}
inline void CopyInfo::set_expaward(::google::protobuf::int32 value) {
  set_has_expaward();
  expaward_ = value;
}

// repeated .conf.Award awardList = 13;
inline int CopyInfo::awardlist_size() const {
  return awardlist_.size();
}
inline void CopyInfo::clear_awardlist() {
  awardlist_.Clear();
}
inline const ::conf::Award& CopyInfo::awardlist(int index) const {
  return awardlist_.Get(index);
}
inline ::conf::Award* CopyInfo::mutable_awardlist(int index) {
  return awardlist_.Mutable(index);
}
inline ::conf::Award* CopyInfo::add_awardlist() {
  return awardlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::conf::Award >&
CopyInfo::awardlist() const {
  return awardlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::conf::Award >*
CopyInfo::mutable_awardlist() {
  return &awardlist_;
}

// -------------------------------------------------------------------

// CopyInfos

// repeated .conf.CopyInfo list = 1;
inline int CopyInfos::list_size() const {
  return list_.size();
}
inline void CopyInfos::clear_list() {
  list_.Clear();
}
inline const ::conf::CopyInfo& CopyInfos::list(int index) const {
  return list_.Get(index);
}
inline ::conf::CopyInfo* CopyInfos::mutable_list(int index) {
  return list_.Mutable(index);
}
inline ::conf::CopyInfo* CopyInfos::add_list() {
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::conf::CopyInfo >&
CopyInfos::list() const {
  return list_;
}
inline ::google::protobuf::RepeatedPtrField< ::conf::CopyInfo >*
CopyInfos::mutable_list() {
  return &list_;
}

// -------------------------------------------------------------------

// RoleLevel

// required sint32 id = 1;
inline bool RoleLevel::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleLevel::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleLevel::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleLevel::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 RoleLevel::id() const {
  return id_;
}
inline void RoleLevel::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required sint32 silver = 2;
inline bool RoleLevel::has_silver() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleLevel::set_has_silver() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleLevel::clear_has_silver() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleLevel::clear_silver() {
  silver_ = 0;
  clear_has_silver();
}
inline ::google::protobuf::int32 RoleLevel::silver() const {
  return silver_;
}
inline void RoleLevel::set_silver(::google::protobuf::int32 value) {
  set_has_silver();
  silver_ = value;
}

// required sint32 gold = 3;
inline bool RoleLevel::has_gold() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoleLevel::set_has_gold() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoleLevel::clear_has_gold() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoleLevel::clear_gold() {
  gold_ = 0;
  clear_has_gold();
}
inline ::google::protobuf::int32 RoleLevel::gold() const {
  return gold_;
}
inline void RoleLevel::set_gold(::google::protobuf::int32 value) {
  set_has_gold();
  gold_ = value;
}

// -------------------------------------------------------------------

// RoleLevels

// repeated .conf.RoleLevel list = 1;
inline int RoleLevels::list_size() const {
  return list_.size();
}
inline void RoleLevels::clear_list() {
  list_.Clear();
}
inline const ::conf::RoleLevel& RoleLevels::list(int index) const {
  return list_.Get(index);
}
inline ::conf::RoleLevel* RoleLevels::mutable_list(int index) {
  return list_.Mutable(index);
}
inline ::conf::RoleLevel* RoleLevels::add_list() {
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::conf::RoleLevel >&
RoleLevels::list() const {
  return list_;
}
inline ::google::protobuf::RepeatedPtrField< ::conf::RoleLevel >*
RoleLevels::mutable_list() {
  return &list_;
}

// -------------------------------------------------------------------

// PlayerBirth

// required sint32 id = 1;
inline bool PlayerBirth::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerBirth::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerBirth::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerBirth::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 PlayerBirth::id() const {
  return id_;
}
inline void PlayerBirth::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required sint32 roleID = 2;
inline bool PlayerBirth::has_roleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerBirth::set_has_roleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerBirth::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerBirth::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 PlayerBirth::roleid() const {
  return roleid_;
}
inline void PlayerBirth::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// required sint32 passID = 3;
inline bool PlayerBirth::has_passid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerBirth::set_has_passid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerBirth::clear_has_passid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerBirth::clear_passid() {
  passid_ = 0;
  clear_has_passid();
}
inline ::google::protobuf::int32 PlayerBirth::passid() const {
  return passid_;
}
inline void PlayerBirth::set_passid(::google::protobuf::int32 value) {
  set_has_passid();
  passid_ = value;
}

// repeated .conf.ResDes res = 4;
inline int PlayerBirth::res_size() const {
  return res_.size();
}
inline void PlayerBirth::clear_res() {
  res_.Clear();
}
inline const ::conf::ResDes& PlayerBirth::res(int index) const {
  return res_.Get(index);
}
inline ::conf::ResDes* PlayerBirth::mutable_res(int index) {
  return res_.Mutable(index);
}
inline ::conf::ResDes* PlayerBirth::add_res() {
  return res_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::conf::ResDes >&
PlayerBirth::res() const {
  return res_;
}
inline ::google::protobuf::RepeatedPtrField< ::conf::ResDes >*
PlayerBirth::mutable_res() {
  return &res_;
}

// -------------------------------------------------------------------

// PlayerBirths

// repeated .conf.PlayerBirth list = 1;
inline int PlayerBirths::list_size() const {
  return list_.size();
}
inline void PlayerBirths::clear_list() {
  list_.Clear();
}
inline const ::conf::PlayerBirth& PlayerBirths::list(int index) const {
  return list_.Get(index);
}
inline ::conf::PlayerBirth* PlayerBirths::mutable_list(int index) {
  return list_.Mutable(index);
}
inline ::conf::PlayerBirth* PlayerBirths::add_list() {
  return list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::conf::PlayerBirth >&
PlayerBirths::list() const {
  return list_;
}
inline ::google::protobuf::RepeatedPtrField< ::conf::PlayerBirth >*
PlayerBirths::mutable_list() {
  return &list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace conf

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_res_2eproto__INCLUDED
