// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_define.proto

#ifndef PROTOBUF_msg_5fdefine_2eproto__INCLUDED
#define PROTOBUF_msg_5fdefine_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include "error_code.pb.h"
#include "base_msg_struct.pb.h"
#include "client_logic_msg.pb.h"
// @@protoc_insertion_point(includes)

namespace net {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_msg_5fdefine_2eproto();
void protobuf_AssignDesc_msg_5fdefine_2eproto();
void protobuf_ShutdownFile_msg_5fdefine_2eproto();


enum CLIENT_MSG_ID {
  C2S_MSG_HEART = 1000,
  C2S_MSG_LOGIN = 1001,
  S2C_MSG_LOGIN_REP = 1002,
  S2C_MSG_LOGINOUT_REP = 1003,
  S2C_MSG_VERSION_INFO_REP = 1004,
  S2C_MSG_ENTER_GAME = 1010,
  S2C_MSG_PLAYER_INFO = 1011,
  C2S_MSG_REQ_SVRS_INFO = 1100,
  S2C_MSG_SVRS_INFO = 1101,
  C2S_MSG_ENTER_SVR = 1102,
  S2C_MSG_ENTER_SVR_REP = 1103,
  C2S_MSG_BACK_LOBBY = 2003,
  S2C_MSG_BACK_LOBBY_REP = 2004
};
bool CLIENT_MSG_ID_IsValid(int value);
const CLIENT_MSG_ID CLIENT_MSG_ID_MIN = C2S_MSG_HEART;
const CLIENT_MSG_ID CLIENT_MSG_ID_MAX = S2C_MSG_BACK_LOBBY_REP;
const int CLIENT_MSG_ID_ARRAYSIZE = CLIENT_MSG_ID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CLIENT_MSG_ID_descriptor();
inline const ::std::string& CLIENT_MSG_ID_Name(CLIENT_MSG_ID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CLIENT_MSG_ID_descriptor(), value);
}
inline bool CLIENT_MSG_ID_Parse(
    const ::std::string& name, CLIENT_MSG_ID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CLIENT_MSG_ID>(
    CLIENT_MSG_ID_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================


// @@protoc_insertion_point(namespace_scope)

}  // namespace net

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::net::CLIENT_MSG_ID>() {
  return ::net::CLIENT_MSG_ID_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_msg_5fdefine_2eproto__INCLUDED
