// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: servers_msg.proto

#ifndef PROTOBUF_servers_5fmsg_2eproto__INCLUDED
#define PROTOBUF_servers_5fmsg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "base_msg_struct.pb.h"
// @@protoc_insertion_point(includes)

namespace net {
namespace svr {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_servers_5fmsg_2eproto();
void protobuf_AssignDesc_servers_5fmsg_2eproto();
void protobuf_ShutdownFile_servers_5fmsg_2eproto();

class server_info;
class msg_register_center_svr_req;
class msg_register_center_svr_rep;
class msg_server_list_rep;
class msg_register_dbagent_svr_req;
class msg_register_dbagent_svr_rep;

// ===================================================================

class server_info : public ::google::protobuf::Message {
 public:
  server_info();
  virtual ~server_info();

  server_info(const server_info& from);

  inline server_info& operator=(const server_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const server_info& default_instance();

  void Swap(server_info* other);

  // implements Message ----------------------------------------------

  server_info* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const server_info& from);
  void MergeFrom(const server_info& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 svrid = 1;
  inline bool has_svrid() const;
  inline void clear_svrid();
  static const int kSvridFieldNumber = 1;
  inline ::google::protobuf::uint32 svrid() const;
  inline void set_svrid(::google::protobuf::uint32 value);

  // optional uint32 svr_type = 2;
  inline bool has_svr_type() const;
  inline void clear_svr_type();
  static const int kSvrTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 svr_type() const;
  inline void set_svr_type(::google::protobuf::uint32 value);

  // optional uint32 game_type = 3;
  inline bool has_game_type() const;
  inline void clear_game_type();
  static const int kGameTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 game_type() const;
  inline void set_game_type(::google::protobuf::uint32 value);

  // optional uint32 game_subtype = 4;
  inline bool has_game_subtype() const;
  inline void clear_game_subtype();
  static const int kGameSubtypeFieldNumber = 4;
  inline ::google::protobuf::uint32 game_subtype() const;
  inline void set_game_subtype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:net.svr.server_info)
 private:
  inline void set_has_svrid();
  inline void clear_has_svrid();
  inline void set_has_svr_type();
  inline void clear_has_svr_type();
  inline void set_has_game_type();
  inline void clear_has_game_type();
  inline void set_has_game_subtype();
  inline void clear_has_game_subtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 svrid_;
  ::google::protobuf::uint32 svr_type_;
  ::google::protobuf::uint32 game_type_;
  ::google::protobuf::uint32 game_subtype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_servers_5fmsg_2eproto();
  friend void protobuf_AssignDesc_servers_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_servers_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static server_info* default_instance_;
};
// -------------------------------------------------------------------

class msg_register_center_svr_req : public ::google::protobuf::Message {
 public:
  msg_register_center_svr_req();
  virtual ~msg_register_center_svr_req();

  msg_register_center_svr_req(const msg_register_center_svr_req& from);

  inline msg_register_center_svr_req& operator=(const msg_register_center_svr_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_register_center_svr_req& default_instance();

  void Swap(msg_register_center_svr_req* other);

  // implements Message ----------------------------------------------

  msg_register_center_svr_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_register_center_svr_req& from);
  void MergeFrom(const msg_register_center_svr_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .net.svr.server_info info = 1;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::net::svr::server_info& info() const;
  inline ::net::svr::server_info* mutable_info();
  inline ::net::svr::server_info* release_info();
  inline void set_allocated_info(::net::svr::server_info* info);

  // @@protoc_insertion_point(class_scope:net.svr.msg_register_center_svr_req)
 private:
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::net::svr::server_info* info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_servers_5fmsg_2eproto();
  friend void protobuf_AssignDesc_servers_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_servers_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static msg_register_center_svr_req* default_instance_;
};
// -------------------------------------------------------------------

class msg_register_center_svr_rep : public ::google::protobuf::Message {
 public:
  msg_register_center_svr_rep();
  virtual ~msg_register_center_svr_rep();

  msg_register_center_svr_rep(const msg_register_center_svr_rep& from);

  inline msg_register_center_svr_rep& operator=(const msg_register_center_svr_rep& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_register_center_svr_rep& default_instance();

  void Swap(msg_register_center_svr_rep* other);

  // implements Message ----------------------------------------------

  msg_register_center_svr_rep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_register_center_svr_rep& from);
  void MergeFrom(const msg_register_center_svr_rep& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:net.svr.msg_register_center_svr_rep)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_servers_5fmsg_2eproto();
  friend void protobuf_AssignDesc_servers_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_servers_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static msg_register_center_svr_rep* default_instance_;
};
// -------------------------------------------------------------------

class msg_server_list_rep : public ::google::protobuf::Message {
 public:
  msg_server_list_rep();
  virtual ~msg_server_list_rep();

  msg_server_list_rep(const msg_server_list_rep& from);

  inline msg_server_list_rep& operator=(const msg_server_list_rep& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_server_list_rep& default_instance();

  void Swap(msg_server_list_rep* other);

  // implements Message ----------------------------------------------

  msg_server_list_rep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_server_list_rep& from);
  void MergeFrom(const msg_server_list_rep& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .net.svr.server_info server_list = 1;
  inline int server_list_size() const;
  inline void clear_server_list();
  static const int kServerListFieldNumber = 1;
  inline const ::net::svr::server_info& server_list(int index) const;
  inline ::net::svr::server_info* mutable_server_list(int index);
  inline ::net::svr::server_info* add_server_list();
  inline const ::google::protobuf::RepeatedPtrField< ::net::svr::server_info >&
      server_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::net::svr::server_info >*
      mutable_server_list();

  // @@protoc_insertion_point(class_scope:net.svr.msg_server_list_rep)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::net::svr::server_info > server_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_servers_5fmsg_2eproto();
  friend void protobuf_AssignDesc_servers_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_servers_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static msg_server_list_rep* default_instance_;
};
// -------------------------------------------------------------------

class msg_register_dbagent_svr_req : public ::google::protobuf::Message {
 public:
  msg_register_dbagent_svr_req();
  virtual ~msg_register_dbagent_svr_req();

  msg_register_dbagent_svr_req(const msg_register_dbagent_svr_req& from);

  inline msg_register_dbagent_svr_req& operator=(const msg_register_dbagent_svr_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_register_dbagent_svr_req& default_instance();

  void Swap(msg_register_dbagent_svr_req* other);

  // implements Message ----------------------------------------------

  msg_register_dbagent_svr_req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_register_dbagent_svr_req& from);
  void MergeFrom(const msg_register_dbagent_svr_req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .net.svr.server_info info = 1;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::net::svr::server_info& info() const;
  inline ::net::svr::server_info* mutable_info();
  inline ::net::svr::server_info* release_info();
  inline void set_allocated_info(::net::svr::server_info* info);

  // @@protoc_insertion_point(class_scope:net.svr.msg_register_dbagent_svr_req)
 private:
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::net::svr::server_info* info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_servers_5fmsg_2eproto();
  friend void protobuf_AssignDesc_servers_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_servers_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static msg_register_dbagent_svr_req* default_instance_;
};
// -------------------------------------------------------------------

class msg_register_dbagent_svr_rep : public ::google::protobuf::Message {
 public:
  msg_register_dbagent_svr_rep();
  virtual ~msg_register_dbagent_svr_rep();

  msg_register_dbagent_svr_rep(const msg_register_dbagent_svr_rep& from);

  inline msg_register_dbagent_svr_rep& operator=(const msg_register_dbagent_svr_rep& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_register_dbagent_svr_rep& default_instance();

  void Swap(msg_register_dbagent_svr_rep* other);

  // implements Message ----------------------------------------------

  msg_register_dbagent_svr_rep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_register_dbagent_svr_rep& from);
  void MergeFrom(const msg_register_dbagent_svr_rep& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:net.svr.msg_register_dbagent_svr_rep)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_servers_5fmsg_2eproto();
  friend void protobuf_AssignDesc_servers_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_servers_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static msg_register_dbagent_svr_rep* default_instance_;
};
// ===================================================================


// ===================================================================

// server_info

// optional uint32 svrid = 1;
inline bool server_info::has_svrid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void server_info::set_has_svrid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void server_info::clear_has_svrid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void server_info::clear_svrid() {
  svrid_ = 0u;
  clear_has_svrid();
}
inline ::google::protobuf::uint32 server_info::svrid() const {
  return svrid_;
}
inline void server_info::set_svrid(::google::protobuf::uint32 value) {
  set_has_svrid();
  svrid_ = value;
}

// optional uint32 svr_type = 2;
inline bool server_info::has_svr_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void server_info::set_has_svr_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void server_info::clear_has_svr_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void server_info::clear_svr_type() {
  svr_type_ = 0u;
  clear_has_svr_type();
}
inline ::google::protobuf::uint32 server_info::svr_type() const {
  return svr_type_;
}
inline void server_info::set_svr_type(::google::protobuf::uint32 value) {
  set_has_svr_type();
  svr_type_ = value;
}

// optional uint32 game_type = 3;
inline bool server_info::has_game_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void server_info::set_has_game_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void server_info::clear_has_game_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void server_info::clear_game_type() {
  game_type_ = 0u;
  clear_has_game_type();
}
inline ::google::protobuf::uint32 server_info::game_type() const {
  return game_type_;
}
inline void server_info::set_game_type(::google::protobuf::uint32 value) {
  set_has_game_type();
  game_type_ = value;
}

// optional uint32 game_subtype = 4;
inline bool server_info::has_game_subtype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void server_info::set_has_game_subtype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void server_info::clear_has_game_subtype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void server_info::clear_game_subtype() {
  game_subtype_ = 0u;
  clear_has_game_subtype();
}
inline ::google::protobuf::uint32 server_info::game_subtype() const {
  return game_subtype_;
}
inline void server_info::set_game_subtype(::google::protobuf::uint32 value) {
  set_has_game_subtype();
  game_subtype_ = value;
}

// -------------------------------------------------------------------

// msg_register_center_svr_req

// optional .net.svr.server_info info = 1;
inline bool msg_register_center_svr_req::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_register_center_svr_req::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_register_center_svr_req::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_register_center_svr_req::clear_info() {
  if (info_ != NULL) info_->::net::svr::server_info::Clear();
  clear_has_info();
}
inline const ::net::svr::server_info& msg_register_center_svr_req::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::net::svr::server_info* msg_register_center_svr_req::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::net::svr::server_info;
  return info_;
}
inline ::net::svr::server_info* msg_register_center_svr_req::release_info() {
  clear_has_info();
  ::net::svr::server_info* temp = info_;
  info_ = NULL;
  return temp;
}
inline void msg_register_center_svr_req::set_allocated_info(::net::svr::server_info* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
}

// -------------------------------------------------------------------

// msg_register_center_svr_rep

// optional uint32 result = 1;
inline bool msg_register_center_svr_rep::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_register_center_svr_rep::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_register_center_svr_rep::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_register_center_svr_rep::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 msg_register_center_svr_rep::result() const {
  return result_;
}
inline void msg_register_center_svr_rep::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// msg_server_list_rep

// repeated .net.svr.server_info server_list = 1;
inline int msg_server_list_rep::server_list_size() const {
  return server_list_.size();
}
inline void msg_server_list_rep::clear_server_list() {
  server_list_.Clear();
}
inline const ::net::svr::server_info& msg_server_list_rep::server_list(int index) const {
  return server_list_.Get(index);
}
inline ::net::svr::server_info* msg_server_list_rep::mutable_server_list(int index) {
  return server_list_.Mutable(index);
}
inline ::net::svr::server_info* msg_server_list_rep::add_server_list() {
  return server_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::net::svr::server_info >&
msg_server_list_rep::server_list() const {
  return server_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::net::svr::server_info >*
msg_server_list_rep::mutable_server_list() {
  return &server_list_;
}

// -------------------------------------------------------------------

// msg_register_dbagent_svr_req

// optional .net.svr.server_info info = 1;
inline bool msg_register_dbagent_svr_req::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_register_dbagent_svr_req::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_register_dbagent_svr_req::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_register_dbagent_svr_req::clear_info() {
  if (info_ != NULL) info_->::net::svr::server_info::Clear();
  clear_has_info();
}
inline const ::net::svr::server_info& msg_register_dbagent_svr_req::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::net::svr::server_info* msg_register_dbagent_svr_req::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::net::svr::server_info;
  return info_;
}
inline ::net::svr::server_info* msg_register_dbagent_svr_req::release_info() {
  clear_has_info();
  ::net::svr::server_info* temp = info_;
  info_ = NULL;
  return temp;
}
inline void msg_register_dbagent_svr_req::set_allocated_info(::net::svr::server_info* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
}

// -------------------------------------------------------------------

// msg_register_dbagent_svr_rep

// optional uint32 result = 1;
inline bool msg_register_dbagent_svr_rep::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_register_dbagent_svr_rep::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_register_dbagent_svr_rep::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_register_dbagent_svr_rep::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 msg_register_dbagent_svr_rep::result() const {
  return result_;
}
inline void msg_register_dbagent_svr_rep::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace svr
}  // namespace net

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_servers_5fmsg_2eproto__INCLUDED
