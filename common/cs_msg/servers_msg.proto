
package net.svr;
import "base_msg_struct.proto";


// 服务器消息ID
enum  SERVER_MSG_ID
{
//----------------------------------------------------------------------------------
	S2S_MSG_REGISTER					= 201;  // 注册
	S2S_MSG_REGISTER_REP				= 202;	// 注册返回	
	S2S_MSG_SERVER_LIST_REP				= 203;	// 服务器列表
	
//------------------------------DBAgent--------------------------------------------------	
	S2DBA_MSG_ASYNC_EXEC_SQL			= 310;  // 异步执行sql
	S2DBA_LOAD_PLAYER_DATA				= 311;	// 请求玩家数据
	DBA2S_LOAD_PLAYER_DATA_REP			= 312;	// 请求玩家数据返回
	S2DBA_SAVE_PLAYER_DATA				= 313;	// 保存玩家数据
}

// -------------------------------------------------------------------------------------

message server_info
{
	optional uint32 svrid  	   	 = 1;		// 服务器ID
	optional uint32 svr_type     = 2;		// 服务器类型
	optional uint32 game_type  	 = 3;		// 游戏类型
	optional uint32 game_subtype = 4;		// 游戏子类型
	optional bytes  uuid		 = 5;		// 服务器uuid
}
// 注册
message msg_register_svr_req
{
	optional server_info info 	 = 1;		// 服务器信息
}
message msg_register_svr_rep
{
	optional uint32 result = 1;			// 返回结果
}
// 服务器列表信息
message msg_server_list_rep
{
	repeated server_info server_list = 1;	// 服务器列表信息 
}

// --------------------------------dbagent服-----------------------------------------------------
// 异步执行sql
message msg_async_exec_sql
{
	optional uint32 db_type = 1;
	optional bytes  sql_str = 2;
	optional uint32 is_compress = 3;
}
// 请求玩家数据
message msg_load_player_data
{
	optional uint32 uid 	  = 1;
	optional uint32 data_type = 2;
}
// 请求玩家数据返回
message msg_load_player_data_rep
{
	optional uint32 uid 	  = 1;
	optional uint32 data_type = 2;
	optional bytes  load_data = 3;
}
// 保存玩家数据
message msg_save_player_data
{
	optional uint32 uid 	  = 1;
	optional uint32 data_type = 2;
	optional bytes  save_data = 3;
}




























